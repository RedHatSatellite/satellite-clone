---
- include: pre_install_check.yml
  when: run_pre_install_check

- name: check satellite version from the config files
  command: tar zxf {{ backup_dir }}/config_files.tar.gz  etc/foreman-installer/scenarios.d/satellite-answers.yaml --to-stdout
  register: satellite_answers
  ignore_errors: true
  no_log: true

- name: set satellite_version to 6.2 if satellite_answers.yaml exists
  set_fact:
    satellite_version: 6.2
  when: satellite_answers.rc == 0

- name: set satellite_version to 6.1 if satellite_answers.yaml does not exist
  set_fact:
    satellite_version: 6.1
  when: satellite_answers.rc != 0

- include: backup_check.yml

# Identify hostname from backup config file
- name: Identify the hostname from the backup config tar file
  shell: tar zxf {{ backup_dir }}/config_files.tar.gz etc/foreman-proxy/settings.yml --to-stdout | grep foreman_url |sed 's#.*/##'
  register: backup_hostname_result
- name: Check that the hostname is not none
  fail: msg="Unable to derive Satellite hostname from the backup config file - value ({{ backup_hostname_result.stdout }}) doesn't look right"
  when: backup_hostname_result.stderr
- name: set hostname
  set_fact:
    hostname: "{{ backup_hostname_result.stdout }}"

- name: Check that mandatory variables are updated
  fail: msg="Please update the variables in satellite-clone-vars.yml (after copying satellite-clone-vars.sample.yml)"
  when: (activationkey == "changeme") or (org == "changeme")

# Register/subscribe the VM
- name: register host
  command: subscription-manager register --force --activationkey={{ activationkey }} --org {{ org }}
  when: register_to_portal
- name: disable all repos
  command: subscription-manager repos --disable "*"
- name: Enable required repos
  command: subscription-manager repos --enable rhel-{{ ansible_distribution_major_version }}-server-rpms --enable rhel-server-rhscl-{{ ansible_distribution_major_version }}-rpms --enable rhel-{{ ansible_distribution_major_version }}-server-satellite-{{ satellite_version }}-rpms

# Install libselinux package
- name: Ensure libselinux-python package is present (required by ansible)
  yum: name=libselinux-python state=latest

# Remove EPEL as it causes problems for the Satellite installer
- name: Remove epel
  yum_repository:
    name: epel
    state: absent

- name: Clean yum info
  command: yum clean all

# turn off firewall
- name: turn off firewalld - rhel7
  service: name=firewalld enabled=no state=stopped
  when: ansible_distribution_major_version == "7" and disable_firewall
- name: turn off firewall - rhel6
  command: "{{ item }}"
  when: ansible_distribution_major_version == "6" and disable_firewall
  with_items:
    - service iptables stop
    - chkconfig iptables off

# Update hostname
- name: set host_name
  hostname: name={{ hostname }}
- name: check /etc/hostname
  lineinfile: dest=/etc/hostname line={{ hostname }}
  when: ansible_distribution_major_version == "7"
- name: create /etc/hosts
  template: src=hosts.j2 dest=/etc/hosts

# Install Satellite packages
- name: Install Satellite 6.1 packages
  yum: name=katello state=latest
  when: satellite_version == 6.1
- name: Install Satellite 6.2 packages
  yum: name=satellite state=latest
  when: satellite_version == 6.2

# The postgres user is created after installing postgresql packages, so
# we perform this owner/group change at this point rather than earlier
- name: change owner of backup directory to postgres
  file:
    path: "{{ backup_dir }}"
    owner: postgres
    group: postgres
    recurse: yes

- name: test foreman.dump file is readable by postgres user
  command: "test -r {{ backup_dir }}/foreman.dump"
  become: yes
  become_user: postgres
  register: access_foreman_dump
  ignore_errors: yes
  when: foreman_dump.stat.exists

- name: test candlepin.dump file is readable by postgres user
  command: "test -r {{ backup_dir }}/candlepin.dump"
  become: yes
  become_user: postgres
  register: access_candlepin_dump
  ignore_errors: yes
  when: candlepin_dump.stat.exists

- name: fail if postgres user doesn't have access to files
  fail:
    msg: >
      The postgres user does not have access to the files in {{ backup_dir }}.
      Please move the backup directory to a different directory with the correct
      permissions. Avoid using /root.
  when: foreman_dump and candlepin_dump and (access_foreman_dump | failed or access_candlepin_dump | failed)

# Workaround for Issue #72 -  satellite-clone playbook fails if /etc/katello-installer isn't present.
- name: Create /etc/katello-installer folder
  file: path=/etc/katello-installer state=directory mode=0755
  when: satellite_version == 6.2

# Restore Config
- name: untar config files (for cloning only)
  command: tar --selinux --overwrite -xf {{ backup_dir }}/config_files.tar.gz -C /
  when: not rhel_migration
- name: untar config files (for migration only)
  # rhel7's /etc/httpd/conf.d/passenger.conf is not backward compatible with rhel6
  command: tar --selinux --overwrite -xf {{ backup_dir }}/config_files.tar.gz --exclude=etc/httpd/conf.d/passenger.conf -C /
  when: rhel_migration

# Run Satellite installer
- name: run Satellite 6.1 installer
  command: katello-installer --capsule-dns false --capsule-dhcp false --capsule-tftp false
  when: satellite_version == 6.1
- name: run Satellite 6.2 installer
  command: satellite-installer --scenario satellite --foreman-proxy-dns false --foreman-proxy-dhcp false --foreman-proxy-tftp false
  when: satellite_version == 6.2

# restore backup data
- include: restore.yml

- name: Restart katello-service
  command: katello-service start

- name: Wait for foreman-tasks service to start
  pause: minutes=5

- name: Run installer upgrade (satellite 6.2 only)
  command: satellite-installer --upgrade
  when: satellite_version == 6.2

- name: Test Satellite
  command: hammer ping

- name: Reset admin password
  command: foreman-rake permissions:reset password=changeme

- name: update katello assets
  file: src=/opt/rh/ruby193/root/usr/share/gems/gems/katello-2.2.0.93/public/assets/katello dest=/usr/share/foreman/public/assets/katello
  when: satellite_version == 6.1
- name: update katello bastion assets
  file: src=/opt/rh/ruby193/root/usr/share/gems/gems/katello-2.2.0.93/public/assets/bastion_katello dest=/usr/share/foreman/public/assets/bastion_katello
  when: satellite_version == 6.1

- include: reset_pulp_data.yml
  when: not pulp_data.stat.exists and not online_backup

- name: Run katello reindex for satellite 6.1 - Note that this might take hours
  command: foreman-rake katello:reindex --trace
  when: run_katello_reindex or not pulp_data.stat.exists and satellite_version == 6.1
- name: Run katello reimport for satellite 6.2 - Note that this might take hours
  command: foreman-rake katello:reimport --trace
  when: run_katello_reindex or not pulp_data.stat.exists and satellite_version == 6.2

- name: Disassociate capsules with lifecycle environments (to avoid the cloned Satellite server talking with live capsules)
  script: disassociate_capsules.rb
  register: disassociate_capsules

- name: copy disassociate_capsules.rb output
  local_action: copy content={{ disassociate_capsules.stdout }} dest={{ playbook_dir }}/logs/reassociate_capsules.txt

- debug:
    msg: "****NOTE**** Your Satellite's hostname is updated to match the original Satellite
          ****NOTE**** Your Satellite's password is updated to changeme"
